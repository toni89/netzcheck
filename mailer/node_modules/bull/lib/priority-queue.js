"use strict";

var Queue = require('./queue');

/**
  Priority Queue.
  
  This is a priority queue based on the normal Queue, to provide the same
  stability and robustness. The priority queue is in fact several Queues,
  one for every posible priority.
  
  This queue works by processing the queues with highest priority first, then
  when they are empty move to the lower priority ones
  
  It works as follows. First the queue with maximum priority is checked to
  see if there are elements waiting (queue.count() > 0), if there are no elements
  then we call queue.pause() on the queue that is empty and move to the next queue
  , everytime we process a job we check the higher queue priority, if not empty
  we move to that one, otherwise we check the current one, if empty we move
  to the next lower priority and so on.
*/
var PriorityQueue = function(name, maxPriority, redisPort, redisHost, redisOptions){
  var queues = []:

  for(var i=0; i<maxPriority; i++){
    queues.push(Queue(name+':prio:'+i));
  }
}

function getQueueName(name, priority){
  return name + '@prio@' + priority;
}

